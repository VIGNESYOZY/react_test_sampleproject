trigger:
  branches:
    include:
      - main # Trigger the pipeline on changes to the main branch

variables:
  DOCKER_HUB_USERNAME: mordenwebdev # Set these variables in Azure DevOps Pipeline settings
  DOCKER_HUB_TOKEN: dckr_pat_F78dLI8J06D19m7LdWl5BG4OgGQ # Use Docker Hub Access Token instead of password
  IMAGE_NAME: private_azure
  BUILD_ID: $(Build.BuildId) # Use Azure DevOps build ID
  IMAGE_TAG: compose_github

pool:
  vmImage: 'ubuntu-latest'

steps:
  - script: |
      # Fetch the latest tag from Docker Hub
      LATEST_TAG=$(curl -s -H "Authorization: Bearer $(DOCKER_HUB_TOKEN)" \
        "https://hub.docker.com/v2/repositories/$(DOCKER_HUB_USERNAME)/$(IMAGE_NAME)/tags/" | \
        jq -r '.results[0].name')

      echo "Latest tag found: $LATEST_TAG"

      # Increment the patch version (1.0.0 to 1.0.1)
      IFS='.' read -r -a VERSION <<< "$LATEST_TAG"
      PATCH_VERSION=$((VERSION[2]+1))
      IMAGE_TAG="${VERSION[0]}.${VERSION[1]}.$PATCH_VERSION"

      echo "New image tag will be: $IMAGE_TAG"
      echo "##vso[task.setvariable variable=IMAGE_TAG]$IMAGE_TAG"
    displayName: 'Determine New Image Tag'

  - script: |
      echo "Installing Docker Compose..."
      sudo apt-get update
      sudo apt-get install -y docker-compose
    displayName: 'Install Docker Compose'

  - script: |
      echo "Logging in to Docker Hub..."
      echo "$(DOCKER_HUB_TOKEN)" | docker login -u $(DOCKER_HUB_USERNAME) --password-stdin # Log in to Docker Hub
    displayName: 'Login to Docker Hub'

  - script: |
      echo "Building and pushing Docker image using Docker Compose..."
      docker-compose build # Build the image using docker-compose
      
      echo "Logging into Docker Hub..."
      echo "$(DOCKER_HUB_TOKEN)" | docker login -u $(DOCKER_HUB_USERNAME) --password-stdin

      echo "Pushing Docker image to Docker Hub..."
      docker-compose push
    displayName: 'Build and Push Docker Image'
